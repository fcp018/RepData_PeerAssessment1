year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-017")
my_date <- ymd("1989-05-017")
my_date <- ymd("1989-05-17")
my_date
clas(my_date)
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("192012//")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("3:22:14")
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes =34, seconds = 55)
this_moment
this_moment <_update(this_moment, hours = 8, minutes =34, seconds = 55)
this_moment <- update(this_moment, hours = 8, minutes =34, seconds = 55)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc+days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <-  depart + hours(15) +  minutes(50)
?with_tz
arrive <-  with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tzone = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive, tzone = attr(last_time))
how_long <- new_interval(last_time, arrive, tzone = last_time)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
if(!file.exists("./data")){dir.create("./data")}
if(!file.exists("./q4data")){dir.create("./q4data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile="./q4data/ACS.csv", method="curl")
download.file(fileUrl,destfile="./q4data/ACS.csv", method="curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile="./q4data/ACS.csv", method="curl")
`getdata%2Fdata%2Fss06hid` <- read.csv("C:\\Users\\fcp018\\AppData\\Local\\Temp\\RtmpKQD1qv\\data1f3c418d192e", header=FALSE)
View(`getdata%2Fdata%2Fss06hid`)
download.file(fileUrl,destfile="./ACS.csv", method="curl")
download.file(fileUrl,destfile="./ACS.csv")
download.file(fileUrl,destfile="./q4data/ACS.csv")
acs <- read.csc("./q4data/ACS.csv")
acs <- read.csv("./q4data/ACS.csv")
View(acs)
splitnames = strsplit(names(acs), "wgtp")
splitnames[123]
splitnames
names(acs)
fileUrl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,destfile="./q4data/GDP.csv")
head(GDP)
gdp <- read.csv("./q4data/gdp.csv")
View(gdp)
head(gdp)
sub1 <-  sub(",","", gdp$X.3)
sub1
class(sub1)
as.numeric(sub1)
sub2 <- is.numeric(sub1)
sub2
sub1 <-  gsub(",","", gdp$X.3)
sub1
mean(as.numeric(sub1))
sub2 <- !is.na(sub1)
sub2
sub2 <- na.omit(sub1)
sub2
mean(as.nubmeric(sub2))
mean(as.numeric(sub2))
t2$GDP <- sapply(gdp$X.3,FUN=function(x) gsub(",","",x))
t2$GDP <- sapply(gdp$V5,FUN=function(x) gsub(",","",x))
gdp$GDP <- sapply(gdp$X.3,FUN=function(x) gsub(",","",x))
View(gdp)
gdp$GDP <- sapply(gdp$GDP,FUN=function(x) gsub(" ","",x))
View(gdp)
View(gdp)
gdp$GDP
sub3 <- gdp$GDP
sub3
mean(as.numeric(gdp$GDP))
mean(as.numeric(gdp$GDP), na.rm=TRUE)
cleanedData <- gsub(",", "", gdp[5:194, 5])
mean(as.numeric(cleandata))
mean(as.numeric(cleanedData))
sub1 <-  sub(",","", gdp$X.3)
mean(as.numeric(sub1), na.rm=TRUE)
dtGDP <- gdp[X != ""]
dtGDP <- gdp[,X != ""]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
file <- file.path(getwd(), "GDP.csv")
download.file(url, file, method = "curl")
download.file(url, file)
dtGDP <- data.table(read.csv(file, skip = 4, nrows = 215, stringsAsFactors = FALSE))
grep("^United, gdp$X.2")
names(gdp)
colnames(gdp)[4] <- "countryNames"
View(gdp)
grep("^United",countryNames)
grep("^United",gdp$countryNames)
grep("^United",gdp$countryNames, label=TRUE)
grep("^United",gdp$countryNames, value=TRUE)
grep("United$",gdp$countryNames, value=TRUE)
grep("*United",gdp$countryNames, value=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(fileUrl,destfile="./q4data/edstats.csv")
View(edstats)
edstats <- read.csv("./q4data/edstats.csv")
edstats
View(edstats)
merged <- merge(gdp,edstats, by.x="X", by.y="CountryCode", all=F, na.rm=T)
View(merged)
head(merged)
str(merged)
dim(merged)
merged[grep ("Fiscal year end: June", merged$Special.Notes), "Special.Notes"]
length[grep("Fiscal year end: June", merged)]
a <- as.character(merged,[,20])
a <- as.character(merged[,20])
length[grep("Fiscal year end: June", a]
length(grep("Fiscal year end: June", a))
View(a)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
length(sampleTimes)
View(sampleTimes)
x <- year(sampleTimes) ==2012
length(sampleTimes[format(sampleTimes, "%Y") == "2012"])
length(sampleTimes[format(sampleTimes, "%Y") == "2012" & format(sampleTimes, "%a")=="Mon"])
?year
?weekdays
?Year
?addmargins
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
library(lubridate)
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
x <- year(sampleTimes) ==2012
length(x)
x <- year(sampleTimes) == "2012"
length(x, value=TRUE)
x <- year(sampleTimes) == 2012
length(sampleTimes[x])
y <- weekdays(sampleTimes) == "Monday"
length(sampleTimes[x & y])
library(swirl)
install_from_swirl(")
install_from_swirl("Data Analysis")
swirl()
main()
menu()
info()
main()
nxt()
swirl()
library("quantmod", lib.loc="~/R/win-library/3.2")
getQuote(MSI)
getQuote(msi)
getQuote("msi")
?getQuote
getQuote
library("quantmod", lib.loc="~/R/win-library/3.2")
getSymbols("AAPL")
barChart(AAPL)
addBands
addBands()
addBBands()
library(swirl)
swirl()
cars
cars$mpgCity
myMPG <- cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
19
range(cars$price)
61.9 - 7.4
var(car$price)
var(cars$price)
sd(cars$price)
35
17
10
25
4
summary(cars$price)
install_from_swirl("Mathematical Biostatistics Boot Camp")
main()
swir()
swirl()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile
(ppm)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
hist(ppm, col = "green", breaks = 1000)
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v= 12)
abline(v= 12, lwd=2)
abline(v= median(ppm), col = "magenta", lwd=4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg <- table(pollution$region)
quit()
library(swirl)
swirl()
?Devices
with(faithful, plot(eruptions, waiting))
tittle(main = "Old Faithful Geyser dat")
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.curr()
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file set = "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region, data=state, c(4,1))
xyplot(Life.Exp~Income|region, data=state, layout = c(4,1))
xyplot(Life.Exp~Income|region, data=state, c(4,1))
xyplot(Life.Exp~Income|region, data=state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
gplot(displ, hwy, data==mpg)
qplot(displ, hwy, data==mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab="Ozone(ppb)", col.axis = "blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)",col.axis = "blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis = "blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par(length)
lenght(par())
length(par())
names(par())
par()$ping
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Ozone and Wind in NYC")
title(main="Wind and Ozone in NYC")
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Month==5)
points(Wind, Ozone, )
points(wind, ozone, )
head(may)
points(may$Wind, may$Ozone, col="blue", pch=17)
par("pch")
notmay <- subset(airquality, Month!=5)
?par
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May, "Other Months"))
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City", outer=TRUE)
c <- read.csv("~/Data Science/Coursera Data Science/ExData_Plotting1/Pwr_consump_subData.csv")
View(c)
plot(DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
attach(c)
plot(DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
View(c)
DateTime <- as.POSIXct(DateTime)
View(c)
plot(DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
x <- read.csv("~/Data Science/Coursera Data Science/ExData_Plotting1/Pwr_consump_subData.csv")
attach(x)
plot(DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
rm(c)
plot(DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
x <- read.csv("~/Data Science/Coursera Data Science/ExData_Plotting1/Pwr_consump_subData.csv")
rm(DateTime)
attach(x)
plot(DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
DateTime <- as.POSIXct(DateTime)
View(DateTime)
plot(DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(DateTime, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy sub metering")
rm(DateTime)
plot(DateTime, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy sub metering")
DateTime <- as.POSIXct(DateTime)
plot(DateTime, Sub_metering_1, type = "l", col = "black", xlab = "", ylab = "Energy sub metering")
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col = "red", pch = 8, main ="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)_
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
pathofile
?pathofile
pathofile("plot1.R", local = TRUE)
pathtofile
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2,R")
myedit("plot2.R")
source(pathtofile("plot2.R"), locatl=TRUE)
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat|color*cut, data=diamonds, strip = FALSE, pch=20, xlab=myxlab, ylab=myylab, main= mymain)
xyplot(price~carat|color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main= mymain)
library(swirl)
swir()
swirl()
str(mpg)
qplot(displ, hwy, mpg)
?qplot
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(disply, hwy, data=mpg, facets=. ~ drv )
qplot(displ, hwy, data=mpg, facets=. ~ drv )
qplot(displ, hwy, data=mpg, facets=drv. ~  )
qplot(displ, hwy, data=mpg, facets=.drv ~  )
qplot(displ, hwy, data=mpg, facets=drv ~.  )
qplot(hwy, data=mpg, facets=drv ~., binwidth =2  )
getwd()
library(swirl)
swirl()
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
g <-ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grids(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(color=drv, size=4, alpha=1/2)
g+geom_point(aes(color=drv, size=4, alpha=1/2))
g+geom_point(aes(color=drv), size=4, alpha=1/2)
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+ geom_smooth(size=4, linetype=3, method="lm", se=FALSE)+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+ geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(myx, myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
`30Highdelimited` <- read.csv("C:/Users/fcp018/rpsd_latest/Fiji_CLS/DEV calculation exp/Analyzed data/30Highdelimited.csv")
View(`30Highdelimited`)
30highx<- 30Highdelimited
datax <- 30Highdelimited
rm(30Highdelimited)
plot1 <- ggplot(HVCO_Compiled.Datasub, aes(VCO_Freq, Mod_Bal_Dac))+geom_point(color="red", size=1)+
stat_smooth(method = "glm", size = 1)+
labs(x="VCO Freq", y="Mod Bal DAC (Dec)", title="Fiji VCO CV vs Mod Bal tuned Dac (Dec)")+
theme(plot.title = element_text(size = rel(1.5), colour = "blue"))
print(plot1)
library(ggplot2)
plot1 <- ggplot(HVCO_Compiled.Datasub, aes(VCO_Freq, Mod_Bal_Dac))+geom_point(color="red", size=1)+
stat_smooth(method = "glm", size = 1)+
labs(x="VCO Freq", y="Mod Bal DAC (Dec)", title="Fiji VCO CV vs Mod Bal tuned Dac (Dec)")+
theme(plot.title = element_text(size = rel(1.5), colour = "blue"))
print(plot1)
HVCO_Compiled.Datasub <- read.csv("C:/Users/fcp018/rpsd_latest/Fiji_CLS/DEV calculation exp/Analyzed data/HVCO_Compiled Datasub.csv")
View(HVCO_Compiled.Datasub)
plot1 <- ggplot(HVCO_Compiled.Datasub, aes(VCO_Freq, Mod_Bal_Dac))+geom_point(color="red", size=1)+
stat_smooth(method = "glm", size = 1)+
labs(x="VCO Freq", y="Mod Bal DAC (Dec)", title="Fiji VCO CV vs Mod Bal tuned Dac (Dec)")+
theme(plot.title = element_text(size = rel(1.5), colour = "blue"))
print(plot1)
set.seed(12345)
par(mar = rep(0.2, 4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
View(dataMatrix)
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
heatmap(dataMatrix)
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
heatmap(dataMatrix)
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
heatmap(dataMatrix)
library(knitr)
knit2html("./docs/PA1_template.Rmd","./docs/PA1_template.html)
?knit2html
getwd()
setwd("~/Data Science/Coursera Data Science/RepData/Project1")
knit2html("./docs/PA1_template.Rmd","./docs/PA1_template.html)
knit2html("./doc/PA1_template.Rmd","./doc/PA1_template.html)
list.files()
knit2html("./doc/PA1_template.Rmd")
knit2html("./doc/PA1_template.Rmd")
knit2html("./PA1_template.Rmd")
setwd("~/Data Science/Coursera Data Science/RepData_PeerAssessment1")
knit2html("./PA1_template.Rmd")
setwd("~/Data Science/Coursera Data Science/RepData_PeerAssessment1")
knit2html("./PA1_template.Rmd")
library(knitr)
knit2html("./PA1_template.Rmd")
